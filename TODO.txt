Priorities from Kristina:

I think such a tool would form a great starting point! As a start I would be happy with the following (by order of importance):

    * ro config: configure research object management tool
    * ro create: create new research object
    * ro add: add files to a research object
    * ro ls: list contents of research object
    * ro annotate, ro annotations: annotate research object contents
    * ro users: sharing research objects

which corresponds very well with your proposal of which functions to tackle initially. The only thing I miss is the sharing part. I think that is something I would like to be able to do quite fast as well. One thing I thought about was logging. Would it be possible to create a log? That would help me backtrack what I actually do with a RO, and in which order I tend to do things.

----

TODO:

* Refactor ro_manifest+ro_annotation to be a class creating a manifest object.  Revise code accordingly; don't depend on rodir from calling code.
** Define class ro_metadata that reads manifest and encapsulates both the graph and the base URI (done)
** Define relativization method that works with the new class (done)
** Modify ro_command functions to use new class for annotations, not ro_annotation module directly
** Check that modified ro_command works with new RO
** Create ro_metadata methods to replace direct references to ro_manifest functions
** Remove direct references to ro_manifest; use ro_metadata methods

* ro eval completeness
** See: http://www.wf4ever-project.org/wiki/display/docs/Integrity+and+Authenticity+component
** Test that aggregated files actually exist - part of liveness?
** Target specification is very error prone
** Error handling when target not found is poor

* ro show config
* ro create to fail if RO already created

* option to change ro manifest details - ro modify?

* ro link
* ro links
* ro users
* ro create: create manifest file via rdflib serialization
* Options to return JSON/RDF info for use by other apps?
* Options for RO logging of changes, etc
* ro list currently shows only files: want to show directories too?


----

DONE

* ro config: configure research object management tool
* ro create: create new research object
* ro status: display status of RO
* ro list / ro ls: list contents of research object
* ro annotate, ro annotations: annotate research object contents

* ro add [file]
* ro add [-a] [directory]
* ro eval completeness minim


Client id = 5248c9c2-e7a2-4e8f-8