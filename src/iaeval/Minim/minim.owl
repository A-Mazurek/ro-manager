Prefix(minim:=<http://purl.org/minim/minim#>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(:=<http://purl.org/minim/minim#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(dc:=<http://purl.org/dc/elements/1.1/>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://purl.org/minim/minim>
Annotation(rdfs:comment "Based on and adapted from ideas and a structure proposed by Matthew Gamble
        ")
Annotation(dc:creator "Graham Klyne")

Declaration(Class(minim:Constraint))
AnnotationAssertion(rdfs:comment minim:Constraint "Relates a Model (or Requirement?) to a target resource for some specific purpose.  The model may constrain some resource other than the target to which it is associated.")
Declaration(Class(minim:Model))
AnnotationAssertion(rdfs:comment minim:Model "Model denotes a Minimum Information Model.  Objects potentially satisfying the model are related by one of the *Satisfies properties.
        "@en)
EquivalentClasses(minim:Model ObjectSomeValuesFrom(minim:hasRequirement minim:Requirement))
Declaration(Class(minim:Object))
AnnotationAssertion(rdfs:comment minim:Object "Any object that reports a minim:Requirement.
          The fact of so reporting a requirement may be triggered by a RequirementRule.
        "@en)
Declaration(Class(minim:Report))
AnnotationAssertion(rdfs:comment minim:Report "Any object that reports a minim:Requirement.
          The fact of so reporting a requirement may be triggered by a RequirementRule.
        "@en)
EquivalentClasses(minim:Report ObjectSomeValuesFrom(minim:reports minim:Requirement))
SubClassOf(minim:Report minim:RequirementRule)
Declaration(Class(minim:Requirement))
AnnotationAssertion(rdfs:comment minim:Requirement "A requirement is an atomic reporting requirement for a minimum information model.
        "@en)
Declaration(Class(minim:RequirementRule))
AnnotationAssertion(rdfs:comment minim:RequirementRule "A rule (of unspecified form or mechanism) that can be applied to
          determine that an object reports some requirement; i.e. is a minim:Report.
          One form of requirement rule is an OWL class definition of the form:
          Class(ReportClass); EquivalentClass(ReportClass, DefiningClass);
            SubclassOf(ReportClass, RestrictionOn(minimReports, SomeRequirement));
        "@en)
EquivalentClasses(minim:RequirementRule ObjectSomeValuesFrom(minim:derives minim:Requirement))
SubClassOf(minim:RequirementRule minim:Object)
Declaration(ObjectProperty(minim:derives))
SubObjectPropertyOf(minim:derives owl:topObjectProperty)
InverseObjectProperties(minim:derives minim:isDerivedFrom)
ObjectPropertyDomain(minim:derives minim:RequirementRule)
ObjectPropertyRange(minim:derives minim:Requirement)
Declaration(ObjectProperty(minim:fullySatisfies))
SubObjectPropertyOf(minim:fullySatisfies minim:nominallySatisfies)
ObjectPropertyDomain(minim:fullySatisfies minim:Object)
ObjectPropertyRange(minim:fullySatisfies minim:Model)
Declaration(ObjectProperty(minim:hasConstraint))
AnnotationAssertion(rdfs:comment minim:hasConstraint "Associates a constraint with a target resource.")
ObjectPropertyRange(minim:hasConstraint minim:Constraint)
Declaration(ObjectProperty(minim:hasMayRequirement))
SubObjectPropertyOf(minim:hasMayRequirement minim:hasRequirement)
Declaration(ObjectProperty(minim:hasMustRequirement))
SubObjectPropertyOf(minim:hasMustRequirement minim:hasRequirement)
Declaration(ObjectProperty(minim:hasRequirement))
SubObjectPropertyOf(minim:hasRequirement owl:topObjectProperty)
ObjectPropertyDomain(minim:hasRequirement minim:Model)
ObjectPropertyRange(minim:hasRequirement minim:Requirement)
Declaration(ObjectProperty(minim:hasShouldRequirement))
SubObjectPropertyOf(minim:hasShouldRequirement minim:hasRequirement)
Declaration(ObjectProperty(minim:isDerivedFrom))
SubObjectPropertyOf(minim:isDerivedFrom owl:topObjectProperty)
InverseObjectProperties(minim:derives minim:isDerivedFrom)
ObjectPropertyDomain(minim:isDerivedFrom minim:Requirement)
Declaration(ObjectProperty(minim:isReportedBy))
SubObjectPropertyOf(minim:isReportedBy minim:isDerivedFrom)
InverseObjectProperties(minim:reports minim:isReportedBy)
ObjectPropertyRange(minim:isReportedBy minim:Report)
Declaration(ObjectProperty(minim:isTriggeredBy))
SubObjectPropertyOf(minim:isTriggeredBy owl:topObjectProperty)
InverseObjectProperties(minim:triggers minim:isTriggeredBy)
Declaration(ObjectProperty(minim:minimallySatisfies))
SubObjectPropertyOf(minim:minimallySatisfies minim:potentiallySatisfies)
ObjectPropertyDomain(minim:minimallySatisfies minim:Object)
ObjectPropertyRange(minim:minimallySatisfies minim:Model)
Declaration(ObjectProperty(minim:nominallySatisfies))
SubObjectPropertyOf(minim:nominallySatisfies minim:minimallySatisfies)
ObjectPropertyDomain(minim:nominallySatisfies minim:Object)
ObjectPropertyRange(minim:nominallySatisfies minim:Model)
Declaration(ObjectProperty(minim:onResource))
AnnotationAssertion(rdfs:comment minim:onResource "A resource to which a constraint is applied.  This mat be different from the target resource with whichthe constraint is associated.  For example, to create a particular file may require that the containing Research Object resource satisfies a given minimum information model.")
FunctionalObjectProperty(minim:onResource)
ObjectPropertyDomain(minim:onResource minim:Constraint)
Declaration(ObjectProperty(minim:potentiallySatisfies))
SubObjectPropertyOf(minim:potentiallySatisfies owl:topObjectProperty)
ObjectPropertyDomain(minim:potentiallySatisfies minim:Object)
ObjectPropertyRange(minim:potentiallySatisfies minim:Model)
Declaration(ObjectProperty(minim:reports))
SubObjectPropertyOf(minim:reports minim:derives)
InverseObjectProperties(minim:reports minim:isReportedBy)
ObjectPropertyDomain(minim:reports minim:Report)
ObjectPropertyRange(minim:reports minim:Requirement)
Declaration(ObjectProperty(minim:toModel))
AnnotationAssertion(rdfs:comment minim:toModel "Indicates a minimum information model that a constraint requires some resource to conform with.")
FunctionalObjectProperty(minim:toModel)
ObjectPropertyDomain(minim:toModel minim:Constraint)
ObjectPropertyRange(minim:toModel minim:Model)
Declaration(ObjectProperty(minim:triggers))
SubObjectPropertyOf(minim:triggers owl:topObjectProperty)
InverseObjectProperties(minim:triggers minim:isTriggeredBy)
ObjectPropertyDomain(minim:triggers minim:RequirementRule)
ObjectPropertyRange(minim:triggers minim:Report)
Declaration(ObjectProperty(owl:topObjectProperty))
Declaration(DataProperty(minim:forPurpose))
AnnotationAssertion(rdfs:comment minim:forPurpose "Associates a descriptive label of the purpose the constraint serves to enable.

Note that a purpose is implicit in the constraint object itself, so the prupose is not treated as a separate resource, or given a separate URI.")
SubDataPropertyOf(minim:forPurpose rdfs:label)
DataPropertyDomain(minim:forPurpose minim:Constraint)
Declaration(DataProperty(rdfs:label))
Declaration(AnnotationProperty(dc:creator))
Declaration(AnnotationProperty(rdfs:comment))
)
