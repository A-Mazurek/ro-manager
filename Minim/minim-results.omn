# Minim checklist result ontology

Prefix: :         <http://purl.org/minim/minim#>
Prefix: rdf:      <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
Prefix: rdfs:     <http://www.w3.org/2000/01/rdf-schema#>
# Prefix: rdfg:     <http://www.w3.org/2004/03/trix/rdfg-1/>
Prefix: ro:       <http://purl.org/wf4ever/ro#>
Prefix: dcterms:  <http://purl.org/dc/terms/>
Prefix: result:   <http://www.w3.org/2001/sw/DataAccess/tests/result-set#>
Prefix: minim:    <http://purl.org/minim/minim#>

Ontology:  <http://purl.org/minim/minim-results>
  # Import: <file:///Users/graham/workspace/wf4ever-ro-manager/Minim/minim-revised.omn>
  # Annotations: ...
  
  # Properties
  # ----------

  # Properties applied to an evaluated research object.  Note that these are included for
  # convenience when generating checklist reports.  The key result semantics are provided
  # by the properties described below that are applied to the evaluated target resource.

  # @@TODO: rename/synonym to match changes to Minim model?
  ObjectProperty: minim:testedConstraint
    Annotations:
      rdfs:label "Tested checklist",
      rdfs:comment
        "This property is used in checklist results to relate a research object to a checklist
        (constraint) against which it has been evaluated."
    Domain: ro:ResearchObject
    Range: minim:Checklist

  DataProperty: minim:testedPurpose
    Annotations:
      rdfs:label "Tested purpose",
      rdfs:comment
        "This property is used in checklist results to relate a research object to a string
        indicating a purpose for which evaluation has been performed.  (Note, this value is
        technically redundant, being accessible from the tested checklist resource, and 
        included for convenience of reporting.)"
    Domain: ro:ResearchObject
    Range: string

  ObjectProperty: minim:testedTarget
    Annotations:
      rdfs:label "Tested target resource",
      rdfs:comment
        "This property is used in checklist results to relate a research object to a checklist
        target resource for which checklist evaluation has been performed."
    Domain: ro:ResearchObject
    Range: ro:Resource

  ObjectProperty: minim:minimUri
    Annotations:
      rdfs:label "Minim definition resource",
      rdfs:comment
        "This property is used in checklist results to relate a research object to a resource
        containing Minim definitions used to perform a checklist evaluation."
    Domain: ro:ResearchObject
    Range: owl:Thing

  ObjectProperty: minim:modelUri
    Annotations:
      rdfs:label "Tested Minim model",
      rdfs:comment
        "This property is used in checklist results to relate a research object to a Minim
        model defning an evaluated checklist.  (The Minim model definition is contained within 
        the resource referenced by minim:minimUri, and MAY be the same URI.  More commonly,
        the Minim model URI is the Minim resource URI with a fragment identifier, allowing a 
        single Minim resource to contain multiple model (checklist) definitions.
        
        Note that the model definition is also included in the result graph returned, 
        for ease of access."
    Domain: ro:ResearchObject
    Range: owl:Thing

  # Properties applied to an evaluated target resource.  These definitively convey the result
  # of a checklist evaluation.

  ObjectProperty: minim:fullySatisfies
    Annotations:
      rdfs:label "Fully satisfied model",
      rdfs:comment
        "This property is used in checklist results to relate an evaluated target resource
        with a checklist model that is fully satisfied by that resource (i.e. all MUST, SHOULD 
        and MAY requirements satisfied)."
    Domain: ro:Resource
    Range: minim:Model

  ObjectProperty: minim:nominallySatisfies
    Annotations:
      rdfs:label "Nominally satisfied model",
      rdfs:comment
        "This property is used in checklist results to relate an evaluated target resource
        with a checklist model that is nominally (adequately) satisfied by that resource 
        (i.e. all MUST and SHOULD requirements satisfied)."
    Domain: ro:Resource
    Range: minim:Model

  ObjectProperty: minim:minimallySatisfies
    Annotations:
      rdfs:label "Minimally satisfied model",
      rdfs:comment
        "This property is used in checklist results to relate an evaluated target resource
        with a checklist model that is minimally (adequately) satisfied by that resource 
        (i.e. all MUST requirements satisfied)."
    Domain: ro:Resource
    Range: minim:Model

  ObjectProperty: minim:satisfied
    Annotations:
      rdfs:label "Satisfied checklist item",
      rdfs:comment
        "This property is used in checklist results to relate an evaluated target resource
        with a checklist item that is satisfied by that resource."
    Domain: ro:Resource
    Range: :ChecklistItemReport    # See below

  ObjectProperty: minim:missingMust
    Annotations:
      rdfs:label "Unsatisfied MUST item",
      rdfs:comment
        "This property is used in checklist results to relate an evaluated target resource
        with a checklist item that is not satisfied by the target resource, but which MUST
        be satisfied for the overall checklist to be satisfied."
    Domain: ro:Resource
    Range: :ChecklistItemReport    # See below

  ObjectProperty: minim:missingShould
    Annotations:
      rdfs:label "Unsatisfied SHOULD item",
      rdfs:comment
        "This property is used in checklist results to relate an evaluated target resource
        with a checklist item that is not satisfied by the target resource, but which SHOULD
        be satisfied for the overall checklist to be fully satisfied."
    Domain: ro:Resource
    Range: :ChecklistItemReport    # See below

  ObjectProperty: minim:missingMay
    Annotations:
      rdfs:label "Unsatisfied MAY item",
      rdfs:comment
        "This property is used in checklist results to relate an evaluated target resource
        with a checklist item that is not satisfied by the target resource, but which is
        defined as an item whose satisfaction is optional."
    Domain: ro:Resource
    Range: :ChecklistItemReport    # See below

  # Properties used with a Checklist item report

  ObjectProperty: minim:tryRequirement
    Annotations:
      rdfs:label "Tested requirement",
      rdfs:comment
        "This property indicates a minim requirement tested by a checklist item report"
    Domain: :ChecklistItemReport
    Range: minim:Requirement

  DataProperty: minim:tryMessage
    Annotations:
      rdfs:label "Tested requirement message",
      rdfs:comment
        "This property indicates a message that described the outcome of the tested requirement"
    Domain: :ChecklistItemReport
    Range: string

  # properties from <http://www.w3.org/2001/sw/DataAccess/tests/result-set#>, used
  # to describe query result bindings

  ObjectProperty: result:binding

  DataProperty: result:variable

  DataProperty: result:value

  # Classes
  # -------

  Class: ro:ResearchObject
    Annotations:
      rdfs:label "Research Object",
      rdfs:comment
          "Many checklist result annotations are applied to the research object that provides
          the context for the evaluation.
          
          In addition to checklist results, some useful descriptive information from the original
          data may be included with the result graph, including:  rdfs:label, 
          dctertms:identifier, dcterms:title, dcterms:description"

  Class: ro:Resource
    Annotations:
      rdfs:label "RO Target resource",
      rdfs:comment
          "The target resource is decorated with properties that indicate the extent to which
          it satisfied a checklist.
          
          In addition, a label property from the original data may be included to help with 
          reporting of results"

  Class: :ChecklistItemReport
    Annotations:
      rdfs:label "Checklist item report",
      rdfs:comment
          "Each item within a checklist is reported separately by a report structure that
          is associated with the Research Object (@@should be target resource?) by a property
          indicating how it affects the overall evaluation: minim:satisfied, minim:missingMust,
          minim:missingShould or minim:missingMay."
    EquivalentTo: 
      ( (minim:tryRequirement exactly 1 minim:Requirement) and
        (minim:tryMessage exactly 1 string) and
        (result:binding only
          ( (result:variable exactly 1 string) and
            (result:value    exactly 1 string) )
        )
      )

  # External classes
  # ---------------- 
  #
  # Ideally, these will be picked up from imported ontologies, but that's not currently working for me.

  Class: minim:Checklist
    Annotations:
      rdfs:label "Minim checklist",
      rdfs:comment
        "A checklist object indicates a minim:Model to be satisfied if a target resource is to be considered suitable for some specific purpose.  As such, it links a target resource and a purpose for which it might be used with a minim:Model that must be satisfied for the resource to be considered fit for that purpose.

A Checklist may be associated directly with a target resource as the subject of a minim:hasChecklist statement, or may be associated indirectly via a URI template that is the object of an associated minim:forTargetTemplate statement.  The latter form is is more flexible as it allows a given checklist to be more easily used with multiple resources."

  Class: minim:Model
    Annotations:
      rdfs:label "Minim model",
      rdfs:comment
        "A Minim model collects a number of requirements, and associates each with a MUST, SHOULD or MAY requirement level."

  Class: minim:Requirement
    Annotations:
      rdfs:label "Minim requirement",
      rdfs:comment
        "A Minim requirement, whose satisfaction is determined by evaluation of the indicated rule.
       
         The minim:seq value is used to order the requirement results returned, 
         to allow more consistent reporting of results."
