# Proposed revised checklist ontology (without backwards compatible elements)

Prefix: : <http://purl.org/minim/minim#>
Prefix: minim: <http://purl.org/minim/minim#>
Prefix: rdfg: <http://www.w3.org/2004/03/trix/rdfg-1/>

Ontology:  <http://purl.org/minim/minim>
  # Import: ...
  # Annotations: ...
  
  # Properties
  # ----------

  ObjectProperty: minim:hasChecklist
    Annotations:
      rdfs:label "has checklist",
      rdfs:comment "Supplies a minim:Checklist to be associated with some target resource.  The subject of this property may be a target resource to which the checklist may be applied, or some arbitrary resource used as a collection of checklists, in which case the checklist itself should include a minim:forTargetTemplate property that is used in the selection of a checklist for some evaluation."
    Domain: owl:Thing
    Range: minim:Checklist

  DataProperty: minim:forTargetTemplate
    Annotations:
      rdfs:label "target resource URI template",
      rdfs:comment "Supplies a URI template that is expanded using predefined variable {targetro} to refer to the Research Object resource targeted by a checklist evaluation (typically, the URI template used is '{+targetro}').  Future implementations may provide alternative variables that may be used in a URI template to construct the URI of a resource to be targeted."
    Domain: minim:Checklist
    Range: string

  DataProperty: minim:forPurpose
    Annotations:
      rdfs:label "for purpose",
      rdfs:comment "Supplies a string which describes a purpose for which checklist evaluation of the target resource is to be performed.

Note that a purpose is implicit in a checklist object itself, so the purpose is not treated as a separate resource, or given a separate URI.  Rather, this string serves as a label or keyword that can be used in a user interface."
    Domain: minim:Checklist
    Range: string
    # SubPropertyOf: rdfs:label

  ObjectProperty: minim:toModel
    Annotations:
      rdfs:label "to model",
      rdfs:comment "Indicates a minim:Model to be used to perform checklist evaluation for the indicated target resource to be suitable for the indicated purpose."
    Domain: minim:Checklist
    Range: minim:Model

  ObjectProperty: hasRequirement
    Annotations:
      rdfs:label "has requirement",
      rdfs:comment "Place holder for minim:hasMustRequirement, minim:hasShouldRequirement or minim:hasMayRequirement"
    Domain: minim:Model
    Range: minim:Requirement
  
  ObjectProperty: minim:hasMustRequirement
    Annotations:
      rdfs:label "has MUST requirement",
      rdfs:comment "indicates a requirement that MUST be satisfied for a checklist to be satisfied"
    SubPropertyOf: hasRequirement
  
  ObjectProperty: minim:hasShouldRequirement
    Annotations:
      rdfs:label "has SHOULD requirement",
      rdfs:comment 
        "indicates a requirement is not mandatory for a checklist to be satisfied, but which is strongly recommended.  Failure to satisfy a SHOULD requirement could be indicative of a problem."
    SubPropertyOf: hasRequirement
  
  ObjectProperty: minim:hasMayRequirement
    Annotations:
      rdfs:label "has MAY requirement",
      rdfs:comment 
        "indicates a requirement is optional for a checklist to be satisfied.
        
        Failure to satisfy a MAY requirement is not considered to be indicative of any problem."
    SubPropertyOf: hasRequirement
    
  # ObjectProperty: minim:derives
  #   Annotations:
  #     rdfs:label "derives",
  #     rdfs:comment 
  #       "Indicates a requirement that is derived by a rule."
  #   Domain: minim:Rule
  #   Range: minim:Requirement
  #   InverseOf: minim:isDerivedBy
    
  ObjectProperty: minim:isDerivedBy
    Annotations:
      rdfs:label "is derived by",
      rdfs:comment 
        "Indicates a rule that, when its test evaluates to True, indicates that a requirement is satisfied."
    Domain: minim:Requirement
    Range: minim:Rule
    
  DataProperty: minim:seq
    Annotations:
      rdfs:label "sequence",
      rdfs:comment
        "A value that is used to order the requirements in a checklist for reporting purpose.  It has no effect on the overall outcome of a checklist evaluation."
    Domain: minim:Requirement
    Range: string

  DataProperty: minim:command
    Annotations:
      rdfs:label "software test command",
      rdfs:comment
        "This property indicates a command to be issued to test the software environment"
    Domain: minim:SoftwareEnvRule
    Range: string

  DataProperty: minim:response
    Annotations:
      rdfs:label "software response regex",
      rdfs:comment
        "This property indicates a regular expression that is required to be matched by the
         output from the command used to test the software environment."
    Domain: minim:SoftwareEnvRule
    Range: string

  ObjectProperty: minim:query
    Annotations:
      rdfs:label "query",
      rdfs:comment
        "This property indicates a query used to extract information from an RDF graph for requirement testing.  In the current design, the only form of query defined is a SPARQL query, but other forms may be introduced later."
    Domain: minim:QueryTestRule
    Range: minim:SparqlQuery

  DataProperty: minim:graph
    Annotations:
      rdfs:label "target graph",
      rdfs:comment
        "This property indicates a graph to be queried, by way of a URI template that is expanded using any currently result variable bindings.  This is the mechanism whereby metadata from an RO may be compared with metadata from external resources."
    Domain: minim:QueryTestRule
    Range: string

  DataProperty: minim:sparql_query
    Annotations:
      rdfs:label "SPARQL query pattern",
      rdfs:comment
        "This property indicates a SPARQL query pattern (such as would appear in a SPARQL WHERE clause) that is used to query the content of an RDF graph."
    Domain: minim:SparqlQuery
    Range: string
  
  DataProperty: minim:result_mod
    Annotations:
      rdfs:label "SPARQL result modifier",
      rdfs:comment
        "This property is used with minim:SparqlQuery to indicate a result modifier (e.g. ORDER BY, GROUP BY, etc.) that is applied to the results results obtained to matching the query pattern.  Using result modifiers can make it easier to produce consistent diagnostic information."
    Domain: minim:SparqlQuery
    Range: string
  
  DataProperty: minim:min
    Annotations:
      rdfs:label "minimum occurrences",
      rdfs:comment
        "This property is used with minim:CardinalityTest to indicate minimum number of distinct results that are required for a cardinality test to be satisfied.
       
Note that minim:min and minim:max can be used together to define an exact cardinality or cardinality range test."
    Domain: minim:CardinalityTest
    Range: integer
  
  DataProperty: minim:max
    Annotations:
      rdfs:label "maximum occurrences",
      rdfs:comment
        "This property is used with minim:CardinalityTest to indicate maximum number of distinct results that are required for a cardinality test to be satisfied.

Note that minim:min and minim:max can be used together to define an exact cardinality or cardinality range test."
    Domain: minim:CardinalityTest
    Range: integer

  ObjectProperty: minim:exists
    Annotations:
      rdfs:label "exists query",
      rdfs:comment
        "This property is used with minim:ExistsTest to indicate a further query that is used to test for the existence of required metadata related to the results so far retrieved."
    Domain: minim:ExistsTest
    Range: minim:SparqlQuery
  
  DataProperty: minim:aggregatesTemplate
    Annotations:
      rdfs:label "aggregation test URI template",
      rdfs:comment
        "This property is used to specify a URI template (cf. http://tools.ietf.org/html/rfc6570) that is in turn used to construct the URI of resource that is tested for inclusion in the current RO aggregation.  The test makes sense only for evaluations performed in the context provided by a Research Object."
    Domain: minim:AggregationTest
    Range: string
  
  DataProperty: minim:isLiveTemplate
    Annotations:
      rdfs:label "accessibility test URI template",
      rdfs:comment
        "This property is used to specify a URI template (cf. http://tools.ietf.org/html/rfc6570)
         that is in turn used to construct the URI of resource to be tested for accessibility (liveness)."
    Domain: minim:AccessibilityTest
    Range: string

  ObjectProperty: minim:affirmRule
    Annotations:
      rdfs:label "test affirmed rule",
      rdfs:comment 
        "Indicates a rule that is invoked with the current query result as predefined variable bindings.  The result returned is the result of the rule invocation."
    Domain: minim:RuleTest
    Range: minim:Rule

  ObjectProperty: minim:negateRule
    Annotations:
      rdfs:label "test negated rule",
      rdfs:comment 
        "Indicates a rule that is invoked with the current query result as predefined variable bindings.  The result returned is success if the rule invocation fails, otherwise failure if the rule succeeds."
    Domain: minim:RuleNegationTest
    Range: minim:Rule

  # Classes
  # -------

  Class: minim:Checklist
    Annotations:
      rdfs:label "Minim checklist",
      rdfs:comment
        "A checklist object indicates a minim:Model to be satisfied if a target resource is to be considered suitable for some specific purpose.  As such, it links a target resource and a purpose for which it might be used with a minim:Model that must be satisfied for the resource to be considered fit for that purpose..

A Checklist may be associated directly with a target resource as the subject of a minim:hasChecklist statement, or may be associated indirectly via a URI template that is the object of an associated minim:forTargetTemplate statement.  The latter form is is more flexible as it allows a given checklist to be more easily used with multiple resources."
    EquivalentTo: 
      ( (minim:forTargetTemplate max 1 string) and
        (minim:forPurpose exactly 1 string) and
        (minim:toModel exactly 1 minim:Model) )

  Class: minim:Model
    Annotations:
      rdfs:label "Minim model",
      rdfs:comment
        "A Minim model collects a number of requirements, and associates each with a MUST, SHOULD or MAY requirement level."
    EquivalentTo:
      hasRequirement only minim:Requirement

  Class: minim:Requirement
    Annotations:
      rdfs:label "Minim requirement",
      rdfs:comment
        "A Minim requirement, whose satisfaction is determined by evaluation of the indicated rule.
       
         The minim:seq value is used to order the requirement results returned, 
         to allow more consistent reporting of results."
    EquivalentTo: 
      (minim:isDerivedBy exactly 1 minim:Rule) and (minim:seq only string)

  Class: minim:Rule
    Annotations:
      rdfs:label "Minim rule",
      rdfs:comment
        "This is a generic placeholder for any rule which is evaluated to determine whether or not a Minim requirement is satisfied.  The various checklist item rules should be declared as subclasses of this rule."

  Class: minim:SoftwareEnvRule
    Annotations:
      rdfs:label "Software environment rule",
      rdfs:comment 
        "A checklist requirement rule that tests the local software environment provides some specified capability or meets some specified requirement.

The test works by issuing a command and testing to see if the response matches asupplied regular expression."
    EquivalentTo: 
      ( ( minim:command exactly 1 string ) and 
        ( minim:response exactly 1 string ) )
    SubClassOf:
      minim:Rule

  Class: minim:QueryTestRule
    Annotations:
      rdfs:label "Query test rule",
      rdfs:comment 
        "Generalized rule consisting of a query to extract information from an RDF graph, and a test that is applied to the results from applying that query.

The query is assumed to return a set of results, each of which contains one ormore variable bindings.  This currently available implementation uses a SPARQL query, but in principle other forms of query are possible, such as an OWL class expression.

If a minim:graph value is supplied, it supplies a URI template used to identify the graph to be queried, otherwise the supplied RO annotation graph is queried."
    EquivalentTo: 
      ( ( minim:query exactly 1 minim:SparqlQuery ) and 
        ( minim:graph max 1 string ) and
        ( minim:CardinalityTest or 
          minim:ExistsTest or 
          minim:AggregationTest or 
          minim:AccessibilityTest or 
          minim:RuleTest or
          minim:RuleNegationTest ) )
    SubClassOf:
      minim:Rule

  Class: minim:SparqlQuery
    Annotations:
      rdfs:label "SPARQL query",
      rdfs:comment 
        "Query an RDF graph and returns results that match the supplied SPARQL query body.  The results returned are a set of results, where each result is a set of query variable bindings corresponding to a single match of the query, and the entire result set contains all distinct matches achieved.

The minim:result_mod value, if present, is added as a query result modifier, and may be used, among other things, to obtain results returned in a consistent oder for better diagnostics."
    EquivalentTo:
      ( (minim:sparql_query exactly 1 string) and (minim:result_mod max 1 string) )

  Class: minim:QueryResultTest
    Annotations:
      rdfs:label "Query result test",
      rdfs:comment 
        "A test of a query result used in conjunction with a Query value to make a QueryTestRule.  Any query tests should be declared as a subclass of this."

  Class: minim:CardinalityTest
    Annotations:
      rdfs:label "Cardinality test",
      rdfs:comment 
        "Tests the number of results returned by a query"
    EquivalentTo:
      ( (minim:min exactly 1 integer) and (minim:max max 1 integer) ) or 
      ( (minim:max exactly 1 integer) and (minim:min max 1 integer) )
    SubClassOf:
      minim:QueryResultTest

  Class: minim:ExistsTest
    Annotations:
      rdfs:label "Metadata exists test",
      rdfs:comment 
        "Tests to see if a supplied query is satisfied by available metadata, matching the
         query results retrieved so far.
         
         This test is a short-cut for a minim:RuleTest that refers to a 'min 1' cardinality test.
         
         @@TBD: keep this or drop it as redundant?"
    EquivalentTo:
      minim:exists exactly 1 minim:SparqlQuery
    SubClassOf:
      minim:QueryResultTest

  Class: minim:AggregationTest
    Annotations:
      rdfs:label "Aggregation test",
      rdfs:comment 
        "Test if a specified resource is part of an RO aggregation.  The resource URI is constructed by using the corresponding query result to provide values for variables in an expansion of the supplied URI template (cf. http://tools.ietf.org/html/rfc6570)"
    EquivalentTo:
      minim:aggregatesTemplate exactly 1 string
    SubClassOf:
      minim:QueryResultTest

  Class: minim:AccessibilityTest
    Annotations:
      rdfs:label "Accessibility test",
      rdfs:comment 
        "Test if a specified resource is accessible (live).  The resource URI is constructed by using the corresponding query result to provide values for variables in an expansion of the supplied URI template (cf. http://tools.ietf.org/html/rfc6570)"
    EquivalentTo:
      minim:isLiveTemplate exactly 1 string
    SubClassOf:
      minim:QueryResultTest

  Class: minim:RuleTest
    Annotations:
      rdfs:label "Rule test",
      rdfs:comment 
        "Invokes a specified rule with the current result as predefined variable bindings.  The result returned is the result of the rule invocation.  This recursive invocation of minim:Rule allows chains of tests to be assembled when a single test alone does not suffice."
    EquivalentTo:
      minim:affirmRule exactly 1 minim:Rule
    SubClassOf:
      minim:QueryResultTest

  Class: minim:RuleNegationTest
    Annotations:
      rdfs:label "Rule negation test",
      rdfs:comment 
        "Invokes a specified rule with the current result as predefined variable bindings.  The result returned is success if the rule invocation fails, otherwise failure if the rule succeeds."
    EquivalentTo:
      minim:negateRule exactly 1 minim:Rule
    SubClassOf:
      minim:QueryResultTest

